// Generated by CoffeeScript 1.4.0
(function() {
  var GTPInputStream;

  require('fs');

  GTPInputStream = (function() {

    function GTPInputStream(stream) {
      this.stream = stream;
    }

    GTPInputStream.prototype.init = function() {
      return this.streamPosition = 0;
    };

    GTPInputStream.prototype.getVersion = function() {
      return this.version;
    };

    GTPInputStream.prototype.getVersionIndex = function() {
      return this.versionIndex;
    };

    GTPInputStream.prototype.isSupportVersion = function() {
      return false;
    };

    GTPInputStream.prototype.readVersion = function() {
      var len;
      len = this.readByte();
      console.log(len);
      this.version = this.readStringByte(len);
      this.streamPosition = 30;
      return this.version;
    };

    GTPInputStream.prototype.read = function(len) {
      var ret;
      if (!len) {
        len = 1;
      }
      ret = this.stream.slice(this.streamPosition, this.streamPosition + len).toString();
      this.streamPosition += len;
      return ret;
    };

    GTPInputStream.prototype.skip = function(len) {
      return this.streamPosition += len;
    };

    GTPInputStream.prototype.readUnsignedByte = function() {
      return (this.read() & 0xff) === 0x01;
    };

    GTPInputStream.prototype.readByte = function() {
      this.streamPosition++;
      return this.stream[this.streamPosition - 1];
    };

    GTPInputStream.prototype.readBoolean = function() {
      return this.readByte === 1;
    };

    GTPInputStream.prototype.readInt = function() {
      var ret;
      ret = this.stream[this.streamPosition + 3] << 24 | this.stream[this.streamPosition + 2] << 16 | this.stream[this.streamPosition + 1] << 8 | this.stream[this.streamPosition];
      this.streamPosition += 3;
      return ret;
    };

    GTPInputStream.prototype.readString = function(size, len) {
      if (Object.prototype.toString.call(len) !== '[object Number]') {
        return this.readString(size, size);
      }
      return this.read(size > 0 ? size : len);
    };

    GTPInputStream.prototype.readStringInteger = function() {
      return this.readString(this.readInt());
    };

    GTPInputStream.prototype.readStringByte = function(size) {
      return this.readString(size, this.readUnsignedByte);
    };

    GTPInputStream.prototype.readStringByteSizeOfByte = function() {
      return this.readStringByte(this.readUnsignedByte() - 1);
    };

    GTPInputStream.prototype.readStringByteSizeOfInteger = function() {
      return this.readStringByte(this.readInt() - 1);
    };

    return GTPInputStream;

  })();

  exports.GTPInputStream = GTPInputStream;

}).call(this);
