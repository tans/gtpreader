// Generated by CoffeeScript 1.4.0
(function() {
  var GtpReader, bufferArray, fileStream, fs, readBufferInt, util;

  console.log('run ');

  fs = require('fs');

  util = require('util');

  GtpReader = (function() {

    function GtpReader(buffer) {
      this.buffer = buffer;
      this.position = 0;
    }

    GtpReader.prototype.readVersion = function() {
      this.position = 30;
      return this.buffer.slice(1, this.buffer.readInt8(0)).toString();
    };

    GtpReader.prototype.readInterger = function() {
      ((bytes[3] & 0xff) << 24) | ((bytes[2] & 0xff) << 16) | ((bytes[1] & 0xff) << 8) | (bytes[0] & 0xff);
      return this.buffer.readInt8(this.buffer.position + 3) * 1000;
    };

    GtpReader.prototype.readStringByteSizeOfInteger = function() {};

    return GtpReader;

  })();

  fileStream = fs.createReadStream('FadeToBlack.gp4');

  bufferArray = [];

  Buffer.prototype.position = 0;

  Buffer.prototype.readByte;

  Buffer.prototype.readUnsignedByte = function() {
    var ret;
    ret = this.readInt8(this.position);
    this.position++;
    console.log(ret);
    return ret;
  };

  Buffer.prototype.readInt = function(type) {
    var ret;
    if (!type) {
      type = 1;
    }
    ret = this.readInt8(this.position);
    this.position += type;
    console.log(ret);
    return ret;
  };

  Buffer.prototype.readString = function(size) {
    var ret;
    if (size > 0) {
      ret = this.slice(this.position, this.position + size).toString();
    } else {
      size = this.readUnsignedByte();
      ret = this.slice(this.position, this.position + size).toString();
    }
    this.position += size;
    return ret;
  };

  readBufferInt = function(buffer, type) {
    if (type) {
      type = 1;
    }
    return buffer.slice(0, type);
  };

  fileStream.on('data', function(data) {
    return bufferArray.push(data);
  });

  fileStream.on('end', function() {
    var gtpBuffer, gtpReader;
    gtpBuffer = Buffer.concat(bufferArray);
    gtpReader = new GtpReader(gtpBuffer);
    console.log(gtpReader.position);
    console.log(gtpReader.readVersion());
    return console.log(gtpReader.position);
  });

}).call(this);
